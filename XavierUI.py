# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\XavierUI\simple.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QUrl
from PyQt5.QtGui import QDesktopServices
import os


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1001, 969)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(0, 0, 1001, 161))
        self.groupBox.setStyleSheet("QGroupBox {\n"
"    background-color: #003087; /* Xavier blue */\n"
"}\n"
"QGroupBox {\n"
"    background-color: #003087;\n"
"    border: 2px solid #FFD700; /* Xavier gold border */\n"
"}\n"
"QGroupBox {\n"
"    background-color: #003087;\n"
"    border: 2px solid #FFD700;\n"
"    border-radius: 5px;\n"
"    color: white;\n"
"}")
        self.groupBox.setObjectName("groupBox")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(40, 10, 171, 141))
        self.label.setText("")
        self.logo_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "xu logo.png")
        self.label.setPixmap(QtGui.QPixmap(self.logo_path))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        
        # Make logo clickable
        self.label.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label.mousePressEvent = self.home_page
        
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(550, 60, 31, 31))
        self.label_2.setText("")
        self.facebook_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "facebook.png")
        self.label_2.setPixmap(QtGui.QPixmap(self.facebook_path))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        
        # Make social media icons clickable
        self.label_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_2.mousePressEvent = self.open_facebook
        
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(600, 60, 41, 31))
        self.label_3.setText("")
        self.twitter_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "twitter logo.webp")
        self.label_3.setPixmap(QtGui.QPixmap(self.twitter_path))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        
        # Make twitter icon clickable
        self.label_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_3.mousePressEvent = self.open_twitter
        
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(660, 60, 31, 31))
        self.label_4.setText("")
        self.instagram_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "ig logo.jpg")
        self.label_4.setPixmap(QtGui.QPixmap(self.instagram_path))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        
        # Make instagram icon clickable
        self.label_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_4.mousePressEvent = self.open_instagram
        
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox)
        self.textBrowser.setGeometry(QtCore.QRect(720, 60, 151, 31))
        self.textBrowser.setObjectName("textBrowser")
        
        # Convert textBrowser to search box with button
        self.searchBox = QtWidgets.QLineEdit(self.groupBox)
        self.searchBox.setGeometry(QtCore.QRect(720, 60, 151, 31))
        self.searchBox.setPlaceholderText("Search...")
        self.searchBox.setObjectName("searchBox")
        
        self.searchButton = QtWidgets.QPushButton(self.groupBox)
        self.searchButton.setGeometry(QtCore.QRect(880, 60, 60, 31))
        self.searchButton.setText("Search")
        self.searchButton.setObjectName("searchButton")
        self.searchButton.clicked.connect(self.search_function)
        
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(0, 160, 1001, 51))
        self.groupBox_2.setStyleSheet("QGroupBox {\n"
"    background-color: #FFE28E\n"
"}")
        self.groupBox_2.setObjectName("groupBox_2")
        
        # Navigation menu buttons
        self.toolButton = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton.setGeometry(QtCore.QRect(30, 20, 51, 19))
        self.toolButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton.setAcceptDrops(True)
        self.toolButton.setCheckable(False)
        self.toolButton.setObjectName("toolButton")
        self.toolButton.clicked.connect(self.open_about)
        
        self.toolButton_2 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_2.setGeometry(QtCore.QRect(110, 20, 61, 19))
        self.toolButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_2.setAcceptDrops(True)
        self.toolButton_2.setCheckable(False)
        self.toolButton_2.setObjectName("toolButton_2")
        self.toolButton_2.clicked.connect(self.open_centennial)
        
        self.toolButton_3 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_3.setGeometry(QtCore.QRect(200, 20, 101, 19))
        self.toolButton_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_3.setAcceptDrops(True)
        self.toolButton_3.setCheckable(False)
        self.toolButton_3.setObjectName("toolButton_3")
        self.toolButton_3.clicked.connect(self.open_admissions)
        
        self.toolButton_4 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_4.setGeometry(QtCore.QRect(330, 20, 71, 19))
        self.toolButton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_4.setAcceptDrops(True)
        self.toolButton_4.setCheckable(False)
        self.toolButton_4.setObjectName("toolButton_4")
        self.toolButton_4.clicked.connect(self.open_scholarships)
        
        self.toolButton_5 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_5.setGeometry(QtCore.QRect(430, 20, 61, 19))
        self.toolButton_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_5.setAcceptDrops(True)
        self.toolButton_5.setCheckable(False)
        self.toolButton_5.setObjectName("toolButton_5")
        self.toolButton_5.clicked.connect(self.open_enrollment)
        
        self.toolButton_6 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_6.setGeometry(QtCore.QRect(520, 20, 71, 19))
        self.toolButton_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_6.setAcceptDrops(True)
        self.toolButton_6.setCheckable(False)
        self.toolButton_6.setObjectName("toolButton_6")
        self.toolButton_6.clicked.connect(self.open_academics)
        
        self.toolButton_7 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_7.setGeometry(QtCore.QRect(620, 20, 61, 19))
        self.toolButton_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_7.setAcceptDrops(True)
        self.toolButton_7.setCheckable(False)
        self.toolButton_7.setObjectName("toolButton_7")
        self.toolButton_7.clicked.connect(self.open_research)
        
        self.toolButton_8 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_8.setGeometry(QtCore.QRect(710, 20, 91, 19))
        self.toolButton_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_8.setAcceptDrops(True)
        self.toolButton_8.setCheckable(False)
        self.toolButton_8.setObjectName("toolButton_8")
        self.toolButton_8.clicked.connect(self.open_presidents_memo)
        
        self.toolButton_9 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_9.setGeometry(QtCore.QRect(840, 20, 61, 19))
        self.toolButton_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.toolButton_9.setAcceptDrops(True)
        self.toolButton_9.setCheckable(False)
        self.toolButton_9.setObjectName("toolButton_9")
        self.toolButton_9.clicked.connect(self.open_contact)
        
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(-10, 210, 1011, 281))
        self.label_5.setText("")
        self.banner_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "autonomous.jpg")
        self.label_5.setPixmap(QtGui.QPixmap(self.banner_path))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        
        # Add slideshow controls
        self.nextSlideButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextSlideButton.setGeometry(QtCore.QRect(950, 320, 30, 30))
        self.nextSlideButton.setText(">")
        self.nextSlideButton.setObjectName("nextSlideButton")
        self.nextSlideButton.clicked.connect(self.next_slide)
        
        self.prevSlideButton = QtWidgets.QPushButton(self.centralwidget)
        self.prevSlideButton.setGeometry(QtCore.QRect(20, 320, 30, 30))
        self.prevSlideButton.setText("<")
        self.prevSlideButton.setObjectName("prevSlideButton")
        self.prevSlideButton.clicked.connect(self.prev_slide)
        
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(0, 490, 1001, 461))
        self.groupBox_3.setStyleSheet("QGroupBox {\n"
"    background-color: #D3D3D3\n"
"}")
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_6 = QtWidgets.QLabel(self.groupBox_3)
        self.label_6.setGeometry(QtCore.QRect(390, 0, 211, 41))
        self.label_6.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 16pt; /* Adjust size as needed */\n"
"    color: #003087; /* Xavier University blue */\n"
"}")
        self.label_6.setObjectName("label_6")
        
        # Making spotlight images clickable
        self.label_7 = QtWidgets.QLabel(self.groupBox_3)
        self.label_7.setGeometry(QtCore.QRect(680, 50, 241, 141))
        self.label_7.setText("")
        self.tree_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "tree planted.jpg")
        self.label_7.setPixmap(QtGui.QPixmap(self.tree_path))
        self.label_7.setScaledContents(True)
        self.label_7.setObjectName("label_7")
        self.label_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_7.mousePressEvent = self.open_tree_program
        
        self.label_8 = QtWidgets.QLabel(self.groupBox_3)
        self.label_8.setGeometry(QtCore.QRect(370, 50, 241, 141))
        self.label_8.setText("")
        self.field_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "field.jpg")
        self.label_8.setPixmap(QtGui.QPixmap(self.field_path))
        self.label_8.setScaledContents(True)
        self.label_8.setObjectName("label_8")
        self.label_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_8.mousePressEvent = self.open_agriculture
        
        self.label_9 = QtWidgets.QLabel(self.groupBox_3)
        self.label_9.setGeometry(QtCore.QRect(50, 50, 241, 141))
        self.label_9.setText("")
        self.campus_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "new campus.jpg")
        self.label_9.setPixmap(QtGui.QPixmap(self.campus_path))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.label_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_9.mousePressEvent = self.open_campus_development
        
        self.label_12 = QtWidgets.QLabel(self.groupBox_3)
        self.label_12.setGeometry(QtCore.QRect(40, 200, 211, 41))
        self.label_12.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 16pt; /* Adjust size as needed */\n"
"    color: #003087; /* Xavier University blue */\n"
"}")
        self.label_12.setText("")
        self.label_12.setObjectName("label_12")
        self.label_10 = QtWidgets.QLabel(self.groupBox_3)
        self.label_10.setGeometry(QtCore.QRect(50, 200, 251, 21))
        self.label_10.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 8pt;\n"
"    font-weight: bold;\n"
"    color: #003087;\n"
"}")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.groupBox_3)
        self.label_11.setGeometry(QtCore.QRect(80, 220, 191, 21))
        self.label_11.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 8pt;\n"
"    font-weight: bold;\n"
"    color: #003087;\n"
"}")
        self.label_11.setObjectName("label_11")
        self.label_13 = QtWidgets.QLabel(self.groupBox_3)
        self.label_13.setGeometry(QtCore.QRect(90, 240, 161, 21))
        self.label_13.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 8pt;\n"
"    font-weight: bold;\n"
"    color: #003087;\n"
"}")
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_3)
        self.label_14.setGeometry(QtCore.QRect(350, 200, 281, 21))
        self.label_14.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 8pt;\n"
"    font-weight: bold;\n"
"    color: #003087;\n"
"}")
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox_3)
        self.label_15.setGeometry(QtCore.QRect(680, 200, 251, 21))
        self.label_15.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 8pt;\n"
"    font-weight: bold;\n"
"    color: #003087;\n"
"}")
        self.label_15.setObjectName("label_15")
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_4.setGeometry(QtCore.QRect(-10, 270, 1001, 181))
        self.groupBox_4.setStyleSheet("QGroupBox {\n"
"    background-color: #003087; /* Xavier blue */\n"
"}\n"
"QGroupBox {\n"
"    background-color: #003087;\n"
"    border: 2px solid #FFD700; /* Xavier gold border */\n"
"}\n"
"QGroupBox {\n"
"    background-color: #003087;\n"
"    border: 2px solid #FFD700;\n"
"    border-radius: 5px;\n"
"    color: white;\n"
"}")
        self.groupBox_4.setObjectName("groupBox_4")
        self.label_16 = QtWidgets.QLabel(self.groupBox_4)
        self.label_16.setGeometry(QtCore.QRect(810, 10, 171, 141))
        self.label_16.setText("")
        self.label_16.setPixmap(QtGui.QPixmap(self.logo_path))
        self.label_16.setScaledContents(True)
        self.label_16.setObjectName("label_16")
        
        # Footer social media icons
        self.label_17 = QtWidgets.QLabel(self.groupBox_4)
        self.label_17.setGeometry(QtCore.QRect(60, 60, 31, 31))
        self.label_17.setText("")
        self.label_17.setPixmap(QtGui.QPixmap(self.facebook_path))
        self.label_17.setScaledContents(True)
        self.label_17.setObjectName("label_17")
        self.label_17.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_17.mousePressEvent = self.open_facebook
        
        self.label_18 = QtWidgets.QLabel(self.groupBox_4)
        self.label_18.setGeometry(QtCore.QRect(110, 60, 41, 31))
        self.label_18.setText("")
        self.label_18.setPixmap(QtGui.QPixmap(self.twitter_path))
        self.label_18.setScaledContents(True)
        self.label_18.setObjectName("label_18")
        self.label_18.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_18.mousePressEvent = self.open_twitter
        
        self.label_19 = QtWidgets.QLabel(self.groupBox_4)
        self.label_19.setGeometry(QtCore.QRect(160, 60, 31, 31))
        self.label_19.setText("")
        self.label_19.setPixmap(QtGui.QPixmap(self.instagram_path))
        self.label_19.setScaledContents(True)
        self.label_19.setObjectName("label_19")
        self.label_19.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_19.mousePressEvent = self.open_instagram
        
        # Add newsletter signup in footer
        self.newsletterLabel = QtWidgets.QLabel(self.groupBox_4)
        self.newsletterLabel.setGeometry(QtCore.QRect(60, 100, 150, 30))
        self.newsletterLabel.setText("Subscribe to Newsletter:")
        self.newsletterLabel.setStyleSheet("color: white;")
        
        self.newsletterEmail = QtWidgets.QLineEdit(self.groupBox_4)
        self.newsletterEmail.setGeometry(QtCore.QRect(60, 130, 200, 30))
        self.newsletterEmail.setPlaceholderText("Enter your email")
        
        self.subscribeButton = QtWidgets.QPushButton(self.groupBox_4)
        self.subscribeButton.setGeometry(QtCore.QRect(270, 130, 80, 30))
        self.subscribeButton.setText("Subscribe")
        self.subscribeButton.clicked.connect(self.subscribe_newsletter)
        
        self.label_20 = QtWidgets.QLabel(self.groupBox_4)
        self.label_20.setGeometry(QtCore.QRect(490, 40, 341, 61))
        self.label_20.setStyleSheet("QLabel {\n"
"    font-family: \"Times New Roman\";\n"
"    font-size: 10pt;\n"
"    font-weight: bold;\n"
"    color: #FFFFFF;\n"
"}")
        self.label_20.setObjectName("label_20")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1001, 21))
        self.menubar.setObjectName("menubar")
        
        # Add menu items
        self.menuFile = self.menubar.addMenu("File")
        self.menuHelp = self.menubar.addMenu("Help")
        
        # Add actions to menu
        self.actionExit = QtWidgets.QAction("Exit", MainWindow)
        self.actionExit.triggered.connect(QtWidgets.QApplication.quit)
        self.menuFile.addAction(self.actionExit)
        
        self.actionAbout = QtWidgets.QAction("About", MainWindow)
        self.actionAbout.triggered.connect(self.show_about)
        self.menuHelp.addAction(self.actionAbout)
        
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Setup slideshow images list
        self.slideshow_images = [
            os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "autonomous.jpg"),
            os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "field.jpg"),
            os.path.join(os.path.dirname(os.path.abspath(__file__)), "images", "new campus.jpg")
        ]
        self.current_slide = 0

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Xavier University - Ateneo de Cagayan"))
        self.groupBox.setTitle(_translate("MainWindow", ""))
        self.groupBox_2.setTitle(_translate("MainWindow", ""))
        self.toolButton.setText(_translate("MainWindow", "About"))
        self.toolButton_2.setText(_translate("MainWindow", "Centennial"))
        self.toolButton_3.setText(_translate("MainWindow", "Testing & Admissions"))
        self.toolButton_4.setText(_translate("MainWindow", "Scholarships"))
        self.toolButton_5.setText(_translate("MainWindow", "Enroll Now"))
        self.toolButton_6.setText(_translate("MainWindow", "Academics"))
        self.toolButton_7.setText(_translate("MainWindow", "Research"))
        self.toolButton_8.setText(_translate("MainWindow", "Presidents Memo"))
        self.toolButton_9.setText(_translate("MainWindow", "Contact Us"))
        self.groupBox_3.setTitle(_translate("MainWindow", ""))
        self.label_6.setText(_translate("MainWindow", "Xavier Ateneo Spotlight"))
        self.label_10.setText(_translate("MainWindow", "Xavier Ateneo sets in motion site development"))
        self.label_11.setText(_translate("MainWindow", "highlighting eco-friendly features"))
        self.label_13.setText(_translate("MainWindow", "of the Campus of the feature"))
        self.label_14.setText(_translate("MainWindow", "College of Agriculture Farm Laboratory in El Gaucho"))
        self.label_15.setText(_translate("MainWindow", "XU Atiman Kinaiyahan: Tree Growing Program"))
        self.groupBox_4.setTitle(_translate("MainWindow", ""))
        self.label_20.setText(_translate("MainWindow", "© 2025 Xavier University - Ateneo de Cagayan\n"
"Corrales Avenue, Cagayan de Oro City, Philippines"))

    # Navigation functions
    def open_about(self):
        self.show_info_dialog("About Xavier University", 
                              "Xavier University - Ateneo de Cagayan is a private, Catholic university founded in 1933 "
                              "by the Society of Jesus in Cagayan de Oro City, Philippines.")
    
    def open_centennial(self):
        self.show_info_dialog("Centennial Celebration", 
                             "Xavier University celebrates its 100th anniversary in 2033! Stay tuned for centennial celebration activities and events.")
    
    def open_admissions(self):
        self.show_info_dialog("Testing & Admissions", 
                             "Xavier University offers admission to qualified students. Visit our admissions office or website for more information on entrance exams and requirements.")
    
    def open_scholarships(self):
        self.show_info_dialog("Scholarships", 
                             "Xavier University offers various academic and financial scholarships to deserving students. Check eligibility requirements and application deadlines.")
    
    def open_enrollment(self):
        self.show_info_dialog("Enrollment Information", 
                             "Enrollment for the new semester is now open! Please visit our enrollment office or online portal to secure your slot.")
    
    def open_academics(self):
        self.show_info_dialog("Academic Programs", 
                             "Xavier University offers undergraduate and graduate programs in various fields including Arts & Sciences, Business & Management, Engineering, Agriculture, and more.")
    
    def open_research(self):
        self.show_info_dialog("Research", 
                             "Xavier University is committed to producing high-quality research that addresses local and global challenges. Explore our research centers and opportunities.")
    
    def open_presidents_memo(self):
        self.show_info_dialog("President's Memo", 
                             "The latest memo from the University President discusses our commitment to sustainable development and community engagement.")
    
    def open_contact(self):
        self.show_info_dialog("Contact Information", 
                             "Xavier University - Ateneo de Cagayan\nCorrales Avenue, Cagayan de Oro City, Philippines\nPhone: +63 (88) 123-4567\nEmail: info@xu.edu.ph")
    
    # Spotlight article functions
    def open_campus_development(self, event):
        self.show_info_dialog("Campus Development", 
                             "Xavier University is developing a new eco-friendly campus with sustainable features. The project aims to create a green learning environment that minimizes environmental impact.")
    
    def open_agriculture(self, event):
        self.show_info_dialog("Agriculture Farm Laboratory", 
                             "The College of Agriculture's Farm Laboratory in El Gaucho serves as a hands-on learning facility for students, promoting sustainable agricultural practices and innovative farming techniques.")
    
    def open_tree_program(self, event):
        self.show_info_dialog("Tree Growing Program", 
                             "XU Atiman Kinaiyahan is Xavier University's tree-growing initiative, fostering environmental stewardship and community involvement in reforestation efforts.")

    # Slideshow navigation
    def next_slide(self):
        self.current_slide = (self.current_slide + 1) % len(self.slideshow_images)
        self.label_5.setPixmap(QtGui.QPixmap(self.slideshow_images[self.current_slide]))

    def prev_slide(self):
        self.current_slide = (self.current_slide - 1) % len(self.slideshow_images)
        self.label_5.setPixmap(QtGui.QPixmap(self.slideshow_images[self.current_slide]))

    # External link handlers
    def home_page(self, event):
        QDesktopServices.openUrl(QUrl("https://www.xu.edu.ph"))

    def open_facebook(self, event):
        QDesktopServices.openUrl(QUrl("https://www.facebook.com/XavierAteneoOfficial"))

    def open_twitter(self, event):
        QDesktopServices.openUrl(QUrl("https://x.com/XavierAteneo"))

    def open_instagram(self, event):
        QDesktopServices.openUrl(QUrl("https://www.instagram.com/xavierateneo"))

    # Placeholder for search functionality
    def search_function(self):
        query = self.searchBox.text()
        if query:
            QDesktopServices.openUrl(QUrl(f"https://www.google.com/search?q={query}+site:xu.edu.ph"))
        else:
            self.show_info_dialog("Search Error", "Please enter a search query.")

    # Placeholder for newsletter subscription
    def subscribe_newsletter(self):
        email = self.newsletterEmail.text()
        if "@" in email and "." in email:
            self.show_info_dialog("Subscription Success", "Thank you for subscribing to our newsletter!")
        else:
            self.show_info_dialog("Subscription Error", "Please enter a valid email address.")

    # Helper method for showing dialogs
    def show_info_dialog(self, title, message):
        QtWidgets.QMessageBox.information(None, title, message)

    def show_about(self):
        self.show_info_dialog("About Xavier University", 
                              "Xavier University - Ateneo de Cagayan is a private, Catholic university founded in 1933 "
                              "by the Society of Jesus in Cagayan de Oro City, Philippines.")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())